<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControl="clr-namespace:TeacherClient.Styles.CustomControl">
    <!--ButtonStyle-->
    <Style TargetType="{x:Type Button}" x:Key="DefaultButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentBox" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#cff400"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentBox" Value="#677900"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToggleButton-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="DefaultTgBtnStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="4" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentBox" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="White"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentBox" Value="#FF2A2627"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RadioButton-->
    <Style TargetType="{x:Type RadioButton}" x:Key="DefaultRaBtnStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" CornerRadius="4" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentBox" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="White"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentBox" Value="#FF2A2627"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ImageButton-->
    <Style TargetType="{x:Type customControl:ImageButton}" x:Key="DefaultImageBtnStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControl:ImageButton}">
                    <Border x:Name="border" CornerRadius="4" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding ImageNomarl, RelativeSource={RelativeSource TemplatedParent}}"></ImageBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="ContentBox" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" >
                                <Setter.Value>
                                    <ImageBrush ImageSource="{Binding ImageDown, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Background" TargetName="border" Value="#cff400"/>-->
                            <Setter Property="TextElement.Foreground" TargetName="ContentBox" Value="#cff400"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControl:ImageButton}" x:Key="ImageButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControl:ImageButton}">
                    <Border x:Name="border" CornerRadius="4" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Height="{Binding ImageHeight, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding ImageWidth, RelativeSource={RelativeSource TemplatedParent}}" x:Name="ShowImage" Source="{Binding ImageNomarl, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="ContentBox" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Source" TargetName="ShowImage" Value="{Binding ImageDown, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="#cff400"/>-->
                            <Setter Property="TextElement.Foreground" TargetName="ContentBox" Value="#cff400"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>